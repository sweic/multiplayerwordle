{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ytdan\\\\OneDrive\\\\Desktop\\\\Computer Science\\\\MERN\\\\wordleio\\\\client\\\\src\\\\components\\\\Board.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport HistoryRow from \"./HistoryRow\";\nimport { useState, useEffect, useRef } from 'react';\nimport CurrentRow from \"./CurrentRow\";\nimport BlankRows from \"./BlankRows\";\nimport { VALIDGUESSES, WORDS } from '../constants.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Board(_ref) {\n  _s();\n\n  let {\n    wordle\n  } = _ref;\n  console.log(wordle);\n  const [history, setHistory] = useState([]);\n  const [currentRow, setCurrentRow] = useState([]);\n  const [reload, setReload] = useState(0);\n  const [toast, setToast] = useState(null);\n  const testRef = useRef(null);\n  var gameEnd = false;\n  var prevRow = [];\n  var prevHistory = [];\n  prevHistory = [];\n\n  function checkKey(e) {\n    if (prevHistory.length == 6 || gameEnd) return;\n\n    if (prevRow.length == 5) {\n      if (e.keyCode == 13) {\n        var word = prevRow;\n        console.log(word);\n\n        if (!VALIDGUESSES.includes(word.join('')) && !WORDS.includes(word.join(''))) {\n          setToast(\"error\");\n          setTimeout(() => {\n            setError(null);\n          }, 2000);\n          return;\n        }\n\n        var target = wordle;\n        var final = [];\n\n        for (var i in word) {\n          var status = \"gray\";\n\n          if (word[i] == target[i]) {\n            status = \"green\";\n            target = target.replace(word[i], \" \");\n          } else if (target.includes(word[i])) {\n            status = \"yellow\";\n            target = target.replace(word[i], \" \");\n          }\n\n          final.push({\n            result: word[i],\n            status: status\n          });\n        }\n\n        setHistory([...prevHistory, final]);\n        prevHistory.push(final);\n        setCurrentRow([]);\n        prevRow = [];\n\n        if (final.every(value => value.status == \"green\")) {\n          setToast(\"winner\");\n          window.removeEventListener('keyup', checkKey);\n          gameEnd = true;\n          prevHistory = [];\n          prevRow = [];\n        }\n      } else if (e.keyCode == 8) {\n        const tmp = prevRow.slice(0, prevRow.length - 1);\n        setCurrentRow(tmp);\n        prevRow = tmp;\n      }\n    } else if (e.keyCode == 8) {\n      const tmp = prevRow.slice(0, prevRow.length - 1);\n      setCurrentRow(tmp);\n      prevRow = tmp;\n    } else if (e.keyCode >= 65 && e.keyCode <= 90) {\n      setCurrentRow([...prevRow, e.key]);\n      prevRow.push(e.key);\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('keyup', checkKey);\n    testRef.current.focus();\n    return () => {\n      window.removeEventListener('keyup', checkKey);\n    };\n  }, []);\n  useEffect(() => {\n    setHistory([]);\n    setCurrentRow([]);\n    setTimeout(() => {\n      window.addEventListener('keyup', checkKey);\n      testRef.current.focus();\n    }, 100);\n  }, [reload]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toasty\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: ``\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), history.length > 0 && /*#__PURE__*/_jsxDEV(HistoryRow, {\n      history: history\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 32\n    }, this), history.length < 6 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"currentrow-container\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(CurrentRow, {\n        currentRow: currentRow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 70\n      }, this), /*#__PURE__*/_jsxDEV(BlankRows, {\n        blankRows: 6 - history.length - 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => {\n        e.preventDefault();\n        setReload(reload + 1);\n      },\n      children: \"Reset Boxes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => {\n        e.preventDefault();\n        window.location.reload();\n      },\n      children: \"New Word\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"fallback-input\",\n      ref: testRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 11\n  }, this);\n}\n\n_s(Board, \"0t6NbLx2+1PzAQ9pSZoZ5k/U/Ow=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["C:/Users/ytdan/OneDrive/Desktop/Computer Science/MERN/wordleio/client/src/components/Board.js"],"names":["React","HistoryRow","useState","useEffect","useRef","CurrentRow","BlankRows","VALIDGUESSES","WORDS","Board","wordle","console","log","history","setHistory","currentRow","setCurrentRow","reload","setReload","toast","setToast","testRef","gameEnd","prevRow","prevHistory","checkKey","e","length","keyCode","word","includes","join","setTimeout","setError","target","final","i","status","replace","push","result","every","value","window","removeEventListener","tmp","slice","key","addEventListener","current","focus","preventDefault","location"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport HistoryRow from \"./HistoryRow\";\r\nimport {useState, useEffect, useRef} from 'react'\r\nimport CurrentRow from \"./CurrentRow\";\r\nimport BlankRows from \"./BlankRows\";\r\nimport {VALIDGUESSES, WORDS} from '../constants.js'\r\nfunction Board({wordle}) {\r\n    console.log(wordle);\r\n   const [history, setHistory] = useState([])\r\n   const [currentRow, setCurrentRow] = useState([]);\r\n   const [reload, setReload] = useState(0)\r\n   const [toast, setToast] = useState(null)\r\n   const testRef = useRef(null)\r\n\r\n   var gameEnd = false\r\n   var prevRow = []\r\n   var prevHistory = []\r\n   prevHistory = [];\r\n  \r\n   function checkKey(e) {\r\n       \r\n    if (prevHistory.length == 6 || gameEnd ) return;\r\n    if (prevRow.length == 5) {\r\n        if (e.keyCode == 13) {\r\n            \r\n            var word = prevRow\r\n\r\n            console.log(word);\r\n            if (!VALIDGUESSES.includes(word.join('')) && !WORDS.includes(word.join(''))) {\r\n                setToast(\"error\");\r\n                setTimeout(() => {\r\n                    setError(null)\r\n                }, 2000)\r\n                return \r\n            }\r\n       var target = wordle;\r\n       var final = []\r\n       for (var i in word) {\r\n           var status = \"gray\"\r\n           if (word[i] == target[i]) {\r\n               status = \"green\"\r\n               target = target.replace(word[i], \" \")\r\n           } else if (target.includes(word[i])) {\r\n               status = \"yellow\"\r\n               target = target.replace(word[i], \" \")\r\n           } \r\n           final.push({result: word[i], status: status});\r\n          \r\n       }\r\n       setHistory([...prevHistory, final])\r\n       prevHistory.push(final)\r\n       setCurrentRow([])\r\n       prevRow = []\r\n       if (final.every((value) => value.status == \"green\")) {\r\n        setToast(\"winner\");\r\n        window.removeEventListener('keyup', checkKey)\r\n        gameEnd = true;\r\n        prevHistory = [];\r\n        prevRow = [];\r\n       \r\n     }\r\n        } \r\n        else if (e.keyCode == 8) {\r\n            const tmp = prevRow.slice(0, prevRow.length - 1)\r\n            setCurrentRow(tmp)\r\n            prevRow = tmp;\r\n\r\n        }\r\n    } else if (e.keyCode == 8) {\r\n        const tmp = prevRow.slice(0, prevRow.length - 1)\r\n        setCurrentRow(tmp)\r\n        prevRow = tmp;\r\n     \r\n            \r\n    } else if (e.keyCode >= 65 && e.keyCode <= 90) {\r\n        setCurrentRow([...prevRow, e.key])\r\n        prevRow.push(e.key)\r\n       \r\n    }\r\n}\r\n    useEffect(() => {\r\n        window.addEventListener('keyup', checkKey);\r\n        testRef.current.focus()\r\n        return () => {\r\n            window.removeEventListener('keyup', checkKey);\r\n        }\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setHistory([])\r\n        setCurrentRow([])\r\n        setTimeout(() => {\r\n            window.addEventListener('keyup', checkKey);\r\n            testRef.current.focus()\r\n        }, 100)\r\n       \r\n       \r\n       \r\n    }, [reload])\r\n\r\n\r\n  return (<div className=\"board-container\">\r\n      <div className=\"toasty\">\r\n        <div className={``}></div>\r\n      </div>\r\n     \r\n        {history.length > 0 && <HistoryRow history={history}></HistoryRow>}\r\n       {history.length < 6 && <div className=\"currentrow-container\"> <CurrentRow currentRow={currentRow}></CurrentRow>\r\n        <BlankRows blankRows={6 - history.length - 1}></BlankRows></div>}\r\n \r\n      <button onClick={(e) => {e.preventDefault(); setReload(reload + 1)}}>Reset Boxes</button>\r\n      <button onClick={(e) => {e.preventDefault(); window.location.reload()}}>New Word</button>\r\n      <input className=\"fallback-input\" ref={testRef}></input>\r\n\r\n  </div>)\r\n}\r\n\r\nexport default Board;\r\n"]},"metadata":{},"sourceType":"module"}