{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ytdan\\\\OneDrive\\\\Desktop\\\\Computer Science\\\\MERN\\\\wordleio\\\\client\\\\src\\\\components\\\\Board.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport HistoryRow from \"./HistoryRow\";\nimport { useState, useEffect, useRef } from 'react';\nimport CurrentRow from \"./CurrentRow\";\nimport BlankRows from \"./BlankRows\";\nimport { VALIDGUESSES } from '../constants.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Board(_ref) {\n  _s();\n\n  let {\n    wordle\n  } = _ref;\n  console.log(wordle);\n  const [history, setHistory] = useState([]);\n  const [currentRow, setCurrentRow] = useState([]);\n  const [reload, setReload] = useState(0);\n  const testRef = useRef(null);\n  var gameEnd = false;\n  var prevRow = [];\n  var prevHistory = [];\n  prevHistory = [];\n\n  function checkKey(e) {\n    if (prevHistory.length == 6 || gameEnd) return;\n\n    if (prevRow.length == 5) {\n      if (e.keyCode == 13) {\n        var word = prevRow;\n\n        if (!VALIDGUESSES.includes(word)) {\n          console.log(\"Not in word list\");\n          return;\n        }\n\n        var target = wordle;\n        var final = [];\n\n        for (var i in word) {\n          var status = \"gray\";\n\n          if (word[i] == target[i]) {\n            status = \"green\";\n            target = target.replace(word[i], \" \");\n          } else if (target.includes(word[i])) {\n            status = \"yellow\";\n            target = target.replace(word[i], \" \");\n          }\n\n          final.push({\n            result: word[i],\n            status: status\n          });\n        }\n\n        setHistory([...prevHistory, final]);\n        prevHistory.push(final);\n        setCurrentRow([]);\n        prevRow = [];\n\n        if (final.every(value => value.status == \"green\")) {\n          window.removeEventListener('keyup', checkKey);\n          gameEnd = true;\n          prevHistory = [];\n          prevRow = [];\n        }\n      } else if (e.keyCode == 8) {\n        const tmp = prevRow.slice(0, prevRow.length - 1);\n        setCurrentRow(tmp);\n        prevRow = tmp;\n      }\n    } else if (e.keyCode == 8) {\n      const tmp = prevRow.slice(0, prevRow.length - 1);\n      setCurrentRow(tmp);\n      prevRow = tmp;\n    } else if (e.keyCode >= 65 && e.keyCode <= 90) {\n      setCurrentRow([...prevRow, e.key]);\n      prevRow.push(e.key);\n    }\n  }\n\n  useEffect(() => {\n    window.addEventListener('keyup', checkKey);\n    testRef.current.focus();\n    return () => {\n      window.removeEventListener('keyup', checkKey);\n    };\n  }, []);\n  useEffect(() => {\n    setHistory([]);\n    setCurrentRow([]);\n    setTimeout(() => {\n      window.addEventListener('keyup', checkKey);\n      testRef.current.focus();\n    }, 100);\n  }, [reload]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-container\",\n    children: [history.length > 0 && /*#__PURE__*/_jsxDEV(HistoryRow, {\n      history: history\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 32\n    }, this), history.length < 6 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"currentrow-container\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(CurrentRow, {\n        currentRow: currentRow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 70\n      }, this), /*#__PURE__*/_jsxDEV(BlankRows, {\n        blankRows: 6 - history.length - 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => {\n        e.preventDefault();\n        setReload(reload + 1);\n      },\n      children: \"Reset Boxes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => {\n        e.preventDefault();\n        window.location.reload();\n      },\n      children: \"New Word\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"fallback-input\",\n      ref: testRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 11\n  }, this);\n}\n\n_s(Board, \"yOhkX14cDF3F7bBQHkgYDcYs5/E=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["C:/Users/ytdan/OneDrive/Desktop/Computer Science/MERN/wordleio/client/src/components/Board.js"],"names":["React","HistoryRow","useState","useEffect","useRef","CurrentRow","BlankRows","VALIDGUESSES","Board","wordle","console","log","history","setHistory","currentRow","setCurrentRow","reload","setReload","testRef","gameEnd","prevRow","prevHistory","checkKey","e","length","keyCode","word","includes","target","final","i","status","replace","push","result","every","value","window","removeEventListener","tmp","slice","key","addEventListener","current","focus","setTimeout","preventDefault","location"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport HistoryRow from \"./HistoryRow\";\r\nimport {useState, useEffect, useRef} from 'react'\r\nimport CurrentRow from \"./CurrentRow\";\r\nimport BlankRows from \"./BlankRows\";\r\nimport {VALIDGUESSES} from '../constants.js'\r\nfunction Board({wordle}) {\r\n    console.log(wordle);\r\n   const [history, setHistory] = useState([])\r\n   const [currentRow, setCurrentRow] = useState([]);\r\n   const [reload, setReload] = useState(0)\r\n   const testRef = useRef(null)\r\n\r\n   var gameEnd = false\r\n   var prevRow = []\r\n   var prevHistory = []\r\n   prevHistory = [];\r\n  \r\n   function checkKey(e) {\r\n       \r\n    if (prevHistory.length == 6 || gameEnd ) return;\r\n    if (prevRow.length == 5) {\r\n        if (e.keyCode == 13) {\r\n            \r\n            var word = prevRow\r\n            if (!VALIDGUESSES.includes(word)) {\r\n                console.log(\"Not in word list\");\r\n                return \r\n            }\r\n       var target = wordle;\r\n       var final = []\r\n       for (var i in word) {\r\n           var status = \"gray\"\r\n           if (word[i] == target[i]) {\r\n               status = \"green\"\r\n               target = target.replace(word[i], \" \")\r\n           } else if (target.includes(word[i])) {\r\n               status = \"yellow\"\r\n               target = target.replace(word[i], \" \")\r\n           } \r\n           final.push({result: word[i], status: status});\r\n          \r\n       }\r\n       setHistory([...prevHistory, final])\r\n       prevHistory.push(final)\r\n       setCurrentRow([])\r\n       prevRow = []\r\n       if (final.every((value) => value.status == \"green\")) {\r\n        window.removeEventListener('keyup', checkKey)\r\n        gameEnd = true;\r\n        prevHistory = [];\r\n        prevRow = [];\r\n       \r\n     }\r\n        } \r\n        else if (e.keyCode == 8) {\r\n            const tmp = prevRow.slice(0, prevRow.length - 1)\r\n            setCurrentRow(tmp)\r\n            prevRow = tmp;\r\n\r\n        }\r\n    } else if (e.keyCode == 8) {\r\n        const tmp = prevRow.slice(0, prevRow.length - 1)\r\n        setCurrentRow(tmp)\r\n        prevRow = tmp;\r\n     \r\n            \r\n    } else if (e.keyCode >= 65 && e.keyCode <= 90) {\r\n        setCurrentRow([...prevRow, e.key])\r\n        prevRow.push(e.key)\r\n       \r\n    }\r\n}\r\n    useEffect(() => {\r\n        window.addEventListener('keyup', checkKey);\r\n        testRef.current.focus()\r\n        return () => {\r\n            window.removeEventListener('keyup', checkKey);\r\n        }\r\n\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setHistory([])\r\n        setCurrentRow([])\r\n        setTimeout(() => {\r\n            window.addEventListener('keyup', checkKey);\r\n            testRef.current.focus()\r\n        }, 100)\r\n       \r\n       \r\n       \r\n    }, [reload])\r\n\r\n\r\n  return (<div className=\"board-container\">\r\n        {history.length > 0 && <HistoryRow history={history}></HistoryRow>}\r\n       {history.length < 6 && <div className=\"currentrow-container\"> <CurrentRow currentRow={currentRow}></CurrentRow>\r\n        <BlankRows blankRows={6 - history.length - 1}></BlankRows></div>}\r\n \r\n      <button onClick={(e) => {e.preventDefault(); setReload(reload + 1)}}>Reset Boxes</button>\r\n      <button onClick={(e) => {e.preventDefault(); window.location.reload()}}>New Word</button>\r\n      <input className=\"fallback-input\" ref={testRef}></input>\r\n\r\n  </div>)\r\n}\r\n\r\nexport default Board;\r\n"]},"metadata":{},"sourceType":"module"}