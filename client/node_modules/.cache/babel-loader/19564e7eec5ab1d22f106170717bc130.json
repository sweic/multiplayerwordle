{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ytdan\\\\OneDrive\\\\Desktop\\\\Computer Science\\\\MERN\\\\wordleio\\\\client\\\\src\\\\components\\\\Keyboard.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { keyrow1, keyrow2, keyrow3 } from '../constants.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Keyboard(_ref) {\n  _s();\n\n  let {\n    results\n  } = _ref;\n  const [keyboard, setKeyboard] = useState([]);\n  useEffect(() => {\n    const initKeys = [keyrow1, keyrow2, keyrow3];\n    setKeyboard(initKeys);\n    console.log(initKeys);\n  }, []);\n  useEffect(() => {\n    var initKeys = [keyrow1, keyrow2, keyrow3];\n\n    for (var a of results) {\n      var flag = false;\n      if (flag) break;else {\n        for (const j in initKeys) {\n          for (var b in initKeys[j]) {\n            if (a.key == initKeys[j][b].key) {\n              initKeys[j][b].status = a.status;\n              flag = true;\n              break;\n            }\n          }\n        }\n      }\n    }\n\n    setKeyboard(initKeys);\n  }, [results]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keyrow one\",\n      children: keyrow1.map(key => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"keytile\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: key.key.toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 19\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Keyboard, \"UVfhHXH4pDbfpGFAzHkYu1xHOSc=\");\n\n_c = Keyboard;\nexport default Keyboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Keyboard\");","map":{"version":3,"sources":["C:/Users/ytdan/OneDrive/Desktop/Computer Science/MERN/wordleio/client/src/components/Keyboard.js"],"names":["React","useEffect","useState","keyrow1","keyrow2","keyrow3","Keyboard","results","keyboard","setKeyboard","initKeys","console","log","a","flag","j","b","key","status","map","toUpperCase"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,SAAQC,OAAR,EAAiBC,OAAjB,EAA0BC,OAA1B,QAAwC,iBAAxC;;;AAEA,SAASC,QAAT,OAA6B;AAAA;;AAAA,MAAX;AAACC,IAAAA;AAAD,GAAW;AACzB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACDD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMS,QAAQ,GAAG,CAACP,OAAD,EAAUC,OAAV,EAAmBC,OAAnB,CAAjB;AACAI,IAAAA,WAAW,CAACC,QAAD,CAAX;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAEH,GALQ,EAKN,EALM,CAAT;AAOAT,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIS,QAAQ,GAAG,CAACP,OAAD,EAAUC,OAAV,EAAmBC,OAAnB,CAAf;;AACA,SAAK,IAAIQ,CAAT,IAAcN,OAAd,EAAuB;AACnB,UAAIO,IAAI,GAAG,KAAX;AACA,UAAIA,IAAJ,EAAU,MAAV,KACK;AACD,aAAK,MAAMC,CAAX,IAAgBL,QAAhB,EAA0B;AACtB,eAAK,IAAIM,CAAT,IAAcN,QAAQ,CAACK,CAAD,CAAtB,EAA2B;AACvB,gBAAIF,CAAC,CAACI,GAAF,IAASP,QAAQ,CAACK,CAAD,CAAR,CAAYC,CAAZ,EAAeC,GAA5B,EAAiC;AAC7BP,cAAAA,QAAQ,CAACK,CAAD,CAAR,CAAYC,CAAZ,EAAeE,MAAf,GAAwBL,CAAC,CAACK,MAA1B;AACAJ,cAAAA,IAAI,GAAG,IAAP;AACA;AACH;AACJ;AACJ;AAEJ;AACJ;;AACDL,IAAAA,WAAW,CAACC,QAAD,CAAX;AACH,GAnBQ,EAmBN,CAACH,OAAD,CAnBM,CAAT;AAqBD,sBAAO;AAAA,2BACH;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,gBACKJ,OAAO,CAACgB,GAAR,CAAaF,GAAD,IAAS;AAClB,4BACI;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,iCACI;AAAA,sBAAOA,GAAG,CAACA,GAAJ,CAAQG,WAAR;AAAP;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ;AAKH,OANA;AADL;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,UAAP;AAWD;;GAzCQd,Q;;KAAAA,Q;AA2CT,eAAeA,QAAf","sourcesContent":["import React from 'react';\r\nimport {useEffect, useState} from 'react';\r\nimport {keyrow1, keyrow2, keyrow3} from '../constants.js';\r\n\r\nfunction Keyboard({results}) {\r\n    const [keyboard, setKeyboard] = useState([])\r\n   useEffect(() => {\r\n       const initKeys = [keyrow1, keyrow2, keyrow3];\r\n       setKeyboard(initKeys);\r\n       console.log(initKeys);\r\n    \r\n   }, [])\r\n\r\n   useEffect(() => {\r\n       var initKeys = [keyrow1, keyrow2, keyrow3];\r\n       for (var a of results) {\r\n           var flag = false\r\n           if (flag) break;\r\n           else {\r\n               for (const j in initKeys) {\r\n                   for (var b in initKeys[j]) {\r\n                       if (a.key == initKeys[j][b].key) {\r\n                           initKeys[j][b].status = a.status\r\n                           flag = true;\r\n                           break;\r\n                       }\r\n                   }\r\n               }\r\n               \r\n           }\r\n       }\r\n       setKeyboard(initKeys)\r\n   }, [results])\r\n    \r\n  return <div>\r\n      <div className=\"keyrow one\">\r\n          {keyrow1.map((key) => {\r\n              return (\r\n                  <div className=\"keytile\">\r\n                      <span>{key.key.toUpperCase()}</span>\r\n                  </div>\r\n              )\r\n          })}\r\n      </div>\r\n  </div>;\r\n}\r\n\r\nexport default Keyboard;\r\n"]},"metadata":{},"sourceType":"module"}