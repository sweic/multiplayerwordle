{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ytdan\\\\OneDrive\\\\Desktop\\\\Computer Science\\\\MERN\\\\wordleio\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './styles.css';\nimport Board from \"./components/Board\";\nimport { WORDS } from './constants.js';\nimport { useEffect, useState, useContext } from 'react';\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport { GameContext } from './context/GameContext.js';\nimport JoinRoom from \"./components/JoinRoom\";\nimport Wrapper from \"./components/Wrapper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new W3CWebSocket('ws://localhost:5000');\n\nfunction App() {\n  _s();\n\n  const {\n    gameID,\n    gameStatus,\n    setGameStatus,\n    setClientID\n  } = useContext(GameContext);\n  useEffect(() => {\n    client.onmessage = message => {\n      const final = JSON.parse(message.data);\n      console.log(final);\n\n      if (final.data.type == \"initial\") {\n        setClientID(final.data.clientID);\n        console.log(final.data.clientID);\n      }\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [gameStatus == \"waiting\" || gameStatus == \"connected\" && /*#__PURE__*/_jsxDEV(Wrapper, {\n      gameID: gameID,\n      client: client\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 63\n    }, this), gameStatus == \"none\" && /*#__PURE__*/_jsxDEV(JoinRoom, {\n      client: client\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"aJZYfaF90kQ0MBjsVOaYC2XQjjc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/ytdan/OneDrive/Desktop/Computer Science/MERN/wordleio/client/src/App.js"],"names":["Board","WORDS","useEffect","useState","useContext","w3cwebsocket","W3CWebSocket","GameContext","JoinRoom","Wrapper","client","App","gameID","gameStatus","setGameStatus","setClientID","onmessage","message","final","JSON","parse","data","console","log","type","clientID"],"mappings":";;;AAAA,OAAO,cAAP;AACA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,SAAQC,KAAR,QAAoB,gBAApB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,EAA6BC,UAA7B,QAA8C,OAA9C;AACA,SAAQC,YAAY,IAAIC,YAAxB,QAA2C,WAA3C;AACA,SAAQC,WAAR,QAA0B,0BAA1B;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AACA,MAAMC,MAAM,GAAG,IAAIJ,YAAJ,CAAiB,qBAAjB,CAAf;;AACA,SAASK,GAAT,GAAe;AAAA;;AAEb,QAAM;AAACC,IAAAA,MAAD;AAASC,IAAAA,UAAT;AAAqBC,IAAAA,aAArB;AAAoCC,IAAAA;AAApC,MAAmDX,UAAU,CAACG,WAAD,CAAnE;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,MAAM,CAACM,SAAP,GAAoBC,OAAD,IAAa;AAC9B,YAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWH,OAAO,CAACI,IAAnB,CAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;;AACA,UAAIA,KAAK,CAACG,IAAN,CAAWG,IAAX,IAAmB,SAAvB,EAAkC;AAChCT,QAAAA,WAAW,CAACG,KAAK,CAACG,IAAN,CAAWI,QAAZ,CAAX;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACG,IAAN,CAAWI,QAAvB;AACD;AACF,KAPD;AAQD,GATQ,CAAT;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,eACEZ,UAAU,IAAI,SAAd,IAA2BA,UAAU,IAAI,WAAd,iBAA6B,QAAC,OAAD;AAAS,MAAA,MAAM,EAAED,MAAjB;AAAyB,MAAA,MAAM,EAAEF;AAAjC;AAAA;AAAA;AAAA;AAAA,YAD1D,EAEEG,UAAU,IAAI,MAAd,iBAAwB,QAAC,QAAD;AAAU,MAAA,MAAM,EAAEH;AAAlB;AAAA;AAAA;AAAA;AAAA,YAF1B;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GArBQC,G;;KAAAA,G;AAuBT,eAAeA,GAAf","sourcesContent":["import './styles.css';\nimport Board from \"./components/Board\";\nimport {WORDS} from './constants.js';\nimport {useEffect, useState, useContext} from 'react';\nimport {w3cwebsocket as W3CWebSocket} from \"websocket\";\nimport {GameContext} from './context/GameContext.js'\nimport JoinRoom from \"./components/JoinRoom\";\nimport Wrapper from \"./components/Wrapper\";\nconst client = new W3CWebSocket('ws://localhost:5000');\nfunction App() {\n  \n  const {gameID, gameStatus, setGameStatus, setClientID} = useContext(GameContext)\n\n  useEffect(() => {\n    client.onmessage = (message) => {\n      const final = JSON.parse(message.data);\n      console.log(final);\n      if (final.data.type == \"initial\") {\n        setClientID(final.data.clientID)\n        console.log(final.data.clientID);\n      }\n    }\n  })\n  \n  return (\n    <div className=\"App\">\n     {gameStatus == \"waiting\" || gameStatus == \"connected\" && <Wrapper gameID={gameID} client={client} ></Wrapper>}\n     {gameStatus == \"none\" && <JoinRoom client={client}></JoinRoom>}\n    </div>\n  );\n}\n\nexport default App; "]},"metadata":{},"sourceType":"module"}