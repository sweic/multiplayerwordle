{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ytdan\\\\OneDrive\\\\Desktop\\\\Computer Science\\\\MERN\\\\wordleio\\\\client\\\\src\\\\components\\\\Wrapper.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState, useContext } from 'react';\nimport Board from \"./Board\";\nimport { GameContext } from '../context/GameContext.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Wrapper(_ref) {\n  _s();\n\n  let {\n    client\n  } = _ref;\n  const {\n    gameStatus,\n    setGameStatus\n  } = useContext(GameContext);\n  const [wordle, setWordle] = useState(\"pinch\");\n  const [history, setHistory] = useState([]);\n  const [currentRow, setCurrentRow] = useState([]);\n  const [reload, setReload] = useState(0);\n  const [error, setError] = useState(false);\n  const [winner, setWinner] = useState(false);\n  useEffect(() => {\n    client.onopen = () => {\n      console.log(\"client connected to server\");\n    };\n\n    client.onmessage = message => {\n      console.log(message.data);\n    };\n  }, []);\n  useEffect(() => {\n    console.log(\"Reloaded\");\n  }, [gameStatus]);\n\n  const renderSwitch = gameStatus => {\n    switch (gameStatus) {\n      case \"waiting\":\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Waiting for other player to connect...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this);\n\n      case \"connected\":\n        return /*#__PURE__*/_jsxDEV(Board, {\n          wordle: wordle,\n          gameProps: (history, setHistory, currentRow, setCurrentRow, reload, setReload, error, setError, winner, setWinner)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: renderSwitch(gameStatus)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Wrapper, \"d0DEFsYle5D28TmUinyBfGXVs7Q=\");\n\n_c = Wrapper;\nexport default Wrapper;\n\nvar _c;\n\n$RefreshReg$(_c, \"Wrapper\");","map":{"version":3,"sources":["C:/Users/ytdan/OneDrive/Desktop/Computer Science/MERN/wordleio/client/src/components/Wrapper.js"],"names":["React","useEffect","useState","useContext","Board","GameContext","Wrapper","client","gameStatus","setGameStatus","wordle","setWordle","history","setHistory","currentRow","setCurrentRow","reload","setReload","error","setError","winner","setWinner","onopen","console","log","onmessage","message","data","renderSwitch"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,EAA6BC,UAA7B,QAA8C,OAA9C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAAQC,WAAR,QAA0B,2BAA1B;;;AAEA,SAASC,OAAT,OAA2B;AAAA;;AAAA,MAAV;AAACC,IAAAA;AAAD,GAAU;AACvB,QAAM;AAACC,IAAAA,UAAD;AAAaC,IAAAA;AAAb,MAA8BN,UAAU,CAACE,WAAD,CAA9C;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,OAAD,CAApC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACc,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACkB,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC,KAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,MAAM,CAACe,MAAP,GAAgB,MAAM;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACD,KAFD;;AAGAjB,IAAAA,MAAM,CAACkB,SAAP,GAAoBC,OAAD,IAAa;AAC9BH,MAAAA,OAAO,CAACC,GAAR,CAAYE,OAAO,CAACC,IAApB;AAED,KAHD;AAKD,GATM,EASJ,EATI,CAAT;AAWA1B,EAAAA,SAAS,CAAC,MAAM;AACZsB,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AAGH,GAJQ,EAIN,CAAChB,UAAD,CAJM,CAAT;;AAMA,QAAMoB,YAAY,GAAIpB,UAAD,IAAgB;AACjC,YAAOA,UAAP;AACI,WAAK,SAAL;AACI,4BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAR;;AACJ,WAAK,WAAL;AACI,4BAAQ,QAAC,KAAD;AAAO,UAAA,MAAM,EAAEE,MAAf;AAAuB,UAAA,SAAS,GAAEE,OAAO,EAAEC,UAAF,EAAcC,UAAd,EAA0BC,aAA1B,EAAyCC,MAAzC,EAAiDC,SAAjD,EAA4DC,KAA5D,EAAmEC,QAAnE,EAA6EC,MAA7E,EAAqFC,SAA9F;AAAhC;AAAA;AAAA;AAAA;AAAA,gBAAR;AAJR;AAMH,GAPD;;AAUF,sBAAO;AAAA,cAAMO,YAAY,CAACpB,UAAD;AAAlB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GArCQF,O;;KAAAA,O;AAuCT,eAAeA,OAAf","sourcesContent":["import React from 'react';\r\nimport {useEffect, useState, useContext} from 'react';\r\nimport Board from \"./Board\";\r\nimport {GameContext} from '../context/GameContext.js'\r\n\r\nfunction Wrapper({client}) {\r\n    const {gameStatus, setGameStatus} = useContext(GameContext);\r\n    const [wordle, setWordle] = useState(\"pinch\")\r\n    const [history, setHistory] = useState([])\r\n    const [currentRow, setCurrentRow] = useState([]);\r\n    const [reload, setReload] = useState(0)\r\n    const [error, setError] = useState(false)\r\n    const [winner, setWinner] = useState(false);\r\n\r\n    useEffect(() => {\r\n        client.onopen = () => {\r\n          console.log(\"client connected to server\");\r\n        }\r\n        client.onmessage = (message) => {\r\n          console.log(message.data);\r\n        \r\n        } \r\n        \r\n      }, [])\r\n\r\n    useEffect(() => {\r\n        console.log(\"Reloaded\")\r\n\r\n        \r\n    }, [gameStatus])\r\n\r\n    const renderSwitch = (gameStatus) => {\r\n        switch(gameStatus) {\r\n            case(\"waiting\"):\r\n                return (<div>Waiting for other player to connect...</div>);\r\n            case(\"connected\"):\r\n                return (<Board wordle={wordle} gameProps={history, setHistory, currentRow, setCurrentRow, reload, setReload, error, setError, winner, setWinner}></Board>)\r\n        }\r\n    }\r\n\r\n\r\n  return <div>{renderSwitch(gameStatus)}</div>\r\n}\r\n\r\nexport default Wrapper;\r\n"]},"metadata":{},"sourceType":"module"}