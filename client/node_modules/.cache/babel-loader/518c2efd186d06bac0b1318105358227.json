{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ytdan\\\\OneDrive\\\\Desktop\\\\Computer Science\\\\MERN\\\\wordleio\\\\client\\\\src\\\\components\\\\Board.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport HistoryRow from \"./HistoryRow\";\nimport { useState, useEffect, useCallback, useReducer } from 'react';\nimport CurrentRow from \"./CurrentRow\";\nimport BlankRows from \"./BlankRows\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Board(_ref) {\n  _s();\n\n  let {\n    wordle\n  } = _ref;\n  const [history, setHistory] = useState([]);\n  const [currentRow, setCurrentRow] = useState([]);\n  var prevRow = currentRow;\n  var prevHistory = history;\n\n  const wordCheck = word => {\n    var target = wordle;\n    var final = [];\n\n    for (var i in word) {\n      var status = \"gray\";\n\n      if (word[i] == wordle[i]) {\n        status = \"green\";\n      } else if (target.includes(word[i])) {\n        status = \"yellow\";\n        target = target.replace(word[i], \" \");\n      }\n\n      final.push({\n        result: word[i],\n        status: status\n      });\n    }\n\n    console.log(final);\n  };\n\n  const checkKey = e => {\n    if (history.length == 6) return;\n\n    if (prevRow.length == 5) {\n      if (e.keyCode == 13) {\n        setHistory([...prevHistory, prevRow]);\n        setCurrentRow([]);\n        prevHistory.push(prevRow);\n        wordCheck(prevRow);\n        prevRow = [];\n      } else if (e.keyCode == 8) {\n        const tmp = prevRow.slice(0, prevRow.length - 1);\n        setCurrentRow(tmp);\n        prevRow = tmp;\n      }\n    } else if (e.keyCode == 8) {\n      const tmp = prevRow.slice(0, prevRow.length - 1);\n      setCurrentRow(tmp);\n      prevRow = tmp;\n    } else if (e.keyCode >= 65 && e.keyCode <= 90) {\n      setCurrentRow([...prevRow, e.key]);\n      prevRow.push(e.key);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('keyup', checkKey);\n    return () => {\n      window.removeEventListener('keyup', checkKey);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-container\",\n    children: [/*#__PURE__*/_jsxDEV(HistoryRow, {\n      history: history\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), history.length < 6 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-container\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(CurrentRow, {\n        currentRow: currentRow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 65\n      }, this), /*#__PURE__*/_jsxDEV(BlankRows, {\n        blankRows: 6 - history.length - 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => {\n        e.preventDefault();\n        console.log(currentRow);\n      },\n      children: \"Click\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: currentRow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 11\n  }, this);\n}\n\n_s(Board, \"SB9BXPMyjvXTIiKmBGeN0JxrWrY=\");\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["C:/Users/ytdan/OneDrive/Desktop/Computer Science/MERN/wordleio/client/src/components/Board.js"],"names":["React","HistoryRow","useState","useEffect","useCallback","useReducer","CurrentRow","BlankRows","Board","wordle","history","setHistory","currentRow","setCurrentRow","prevRow","prevHistory","wordCheck","word","target","final","i","status","includes","replace","push","result","console","log","checkKey","e","length","keyCode","tmp","slice","key","window","addEventListener","removeEventListener","preventDefault"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport HistoryRow from \"./HistoryRow\";\r\nimport {useState, useEffect, useCallback, useReducer} from 'react'\r\nimport CurrentRow from \"./CurrentRow\";\r\nimport BlankRows from \"./BlankRows\";\r\nfunction Board({wordle}) {\r\n\r\n   \r\n   const [history, setHistory] = useState([])\r\n   const [currentRow, setCurrentRow] = useState([]);\r\n   var prevRow = currentRow\r\n   var prevHistory = history\r\n   const wordCheck = (word) => {\r\n       var target = wordle;\r\n       var final = []\r\n       for (var i in word) {\r\n           var status = \"gray\"\r\n        \r\n           if (word[i] == wordle[i]) {\r\n               status = \"green\"\r\n         \r\n           } else if (target.includes(word[i])) {\r\n               status = \"yellow\"\r\n               target = target.replace(word[i], \" \")\r\n           } \r\n           final.push({result: word[i], status: status});\r\n          \r\n       }\r\n       console.log(final);\r\n\r\n   }\r\n   const checkKey = (e) => {\r\n    if (history.length == 6) return;\r\n    if (prevRow.length == 5) {\r\n        if (e.keyCode == 13) {\r\n            setHistory([...prevHistory, prevRow])\r\n            setCurrentRow([]);\r\n            prevHistory.push(prevRow);\r\n            wordCheck(prevRow)\r\n            prevRow = []\r\n            \r\n            \r\n        } \r\n        else if (e.keyCode == 8) {\r\n            const tmp = prevRow.slice(0, prevRow.length - 1)\r\n            setCurrentRow(tmp)\r\n            prevRow = tmp;\r\n\r\n        }\r\n    } else if (e.keyCode == 8) {\r\n        const tmp = prevRow.slice(0, prevRow.length - 1)\r\n            setCurrentRow(tmp)\r\n            prevRow = tmp;\r\n     \r\n            \r\n    } else if (e.keyCode >= 65 && e.keyCode <= 90) {\r\n        \r\n        setCurrentRow([...prevRow, e.key])\r\n        prevRow.push(e.key)\r\n       \r\n    }\r\n}\r\n    useEffect(() => {\r\n        window.addEventListener('keyup', checkKey);\r\n        return () => {\r\n            window.removeEventListener('keyup', checkKey);\r\n        }\r\n\r\n    }, [])\r\n\r\n\r\n  return (<div className=\"board-container\">\r\n        <HistoryRow history={history}></HistoryRow>\r\n       {history.length < 6 && <div className=\"board-container\"> <CurrentRow currentRow={currentRow}></CurrentRow>\r\n        <BlankRows blankRows={6 - history.length - 1}></BlankRows></div>}\r\n        \r\n    \r\n      <button onClick={(e) => {e.preventDefault(); console.log(currentRow)}}>Click</button>\r\n      <span>{currentRow}</span>\r\n    \r\n      \r\n      \r\n      \r\n\r\n  </div>)\r\n}\r\n\r\nexport default Board;\r\n"]},"metadata":{},"sourceType":"module"}