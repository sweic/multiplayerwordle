{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ytdan\\\\OneDrive\\\\Desktop\\\\Computer Science\\\\MERN\\\\wordleio\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './styles.css';\nimport Board from \"./components/Board\";\nimport { WORDS } from './constants.js';\nimport { useEffect, useState, useContext } from 'react';\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport { GameContext } from './context/GameContext.js';\nimport JoinRoom from \"./components/JoinRoom\";\nimport Wrapper from \"./components/Wrapper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new W3CWebSocket('ws://localhost:5000');\n\nfunction App() {\n  _s();\n\n  const {\n    gameID,\n    gameStatus,\n    setGameStatus,\n    setClientID,\n    setCreateJoin,\n    setGameID\n  } = useContext(GameContext);\n  useEffect(() => {\n    client.onmessage = message => {\n      const data = JSON.parse(message.data);\n      console.log(data);\n\n      if (data.type == \"initial\") {\n        setClientID(data.clientID);\n        console.log(data.clientID);\n      }\n\n      if (data.type == \"create\") {\n        setGameID(data.gameID);\n        setCreateJoin(\"create\");\n      }\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      client: client\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"j7QlKTMULvSn9QArqgELzyZxNyQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/ytdan/OneDrive/Desktop/Computer Science/MERN/wordleio/client/src/App.js"],"names":["Board","WORDS","useEffect","useState","useContext","w3cwebsocket","W3CWebSocket","GameContext","JoinRoom","Wrapper","client","App","gameID","gameStatus","setGameStatus","setClientID","setCreateJoin","setGameID","onmessage","message","data","JSON","parse","console","log","type","clientID"],"mappings":";;;AAAA,OAAO,cAAP;AACA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,SAAQC,KAAR,QAAoB,gBAApB;AACA,SAAQC,SAAR,EAAmBC,QAAnB,EAA6BC,UAA7B,QAA8C,OAA9C;AACA,SAAQC,YAAY,IAAIC,YAAxB,QAA2C,WAA3C;AACA,SAAQC,WAAR,QAA0B,0BAA1B;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AACA,MAAMC,MAAM,GAAG,IAAIJ,YAAJ,CAAiB,qBAAjB,CAAf;;AACA,SAASK,GAAT,GAAe;AAAA;;AAEb,QAAM;AAACC,IAAAA,MAAD;AAASC,IAAAA,UAAT;AAAqBC,IAAAA,aAArB;AAAoCC,IAAAA,WAApC;AAAiDC,IAAAA,aAAjD;AAAgEC,IAAAA;AAAhE,MAA6Eb,UAAU,CAACG,WAAD,CAA7F;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,MAAM,CAACQ,SAAP,GAAoBC,OAAD,IAAa;AAC9B,YAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWH,OAAO,CAACC,IAAnB,CAAb;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,UAAIA,IAAI,CAACK,IAAL,IAAa,SAAjB,EAA4B;AAC1BV,QAAAA,WAAW,CAACK,IAAI,CAACM,QAAN,CAAX;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACM,QAAjB;AACD;;AAED,UAAIN,IAAI,CAACK,IAAL,IAAa,QAAjB,EAA2B;AACzBR,QAAAA,SAAS,CAACG,IAAI,CAACR,MAAN,CAAT;AACAI,QAAAA,aAAa,CAAC,QAAD,CAAb;AACD;AACF,KAZD;AAaD,GAdQ,CAAT;AAgBA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACC,QAAC,OAAD;AAAS,MAAA,MAAM,EAAEN;AAAjB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA1BQC,G;;KAAAA,G;AA4BT,eAAeA,GAAf","sourcesContent":["import './styles.css';\nimport Board from \"./components/Board\";\nimport {WORDS} from './constants.js';\nimport {useEffect, useState, useContext} from 'react';\nimport {w3cwebsocket as W3CWebSocket} from \"websocket\";\nimport {GameContext} from './context/GameContext.js'\nimport JoinRoom from \"./components/JoinRoom\";\nimport Wrapper from \"./components/Wrapper\";\nconst client = new W3CWebSocket('ws://localhost:5000');\nfunction App() {\n  \n  const {gameID, gameStatus, setGameStatus, setClientID, setCreateJoin, setGameID} = useContext(GameContext)\n\n  useEffect(() => {\n    client.onmessage = (message) => {\n      const data = JSON.parse(message.data);\n      console.log(data);\n      if (data.type == \"initial\") {\n        setClientID(data.clientID)\n        console.log(data.clientID);\n      }\n\n      if (data.type == \"create\") {\n        setGameID(data.gameID);\n        setCreateJoin(\"create\");\n      }\n    }\n  })\n  \n  return (\n    <div className=\"App\">\n     <Wrapper client={client}></Wrapper>\n     \n    </div>\n  );\n}\n\nexport default App; "]},"metadata":{},"sourceType":"module"}