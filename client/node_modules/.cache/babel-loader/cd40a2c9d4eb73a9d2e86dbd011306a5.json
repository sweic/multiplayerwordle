{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ytdan\\\\OneDrive\\\\Desktop\\\\Computer Science\\\\MERN\\\\wordle-io\\\\client\\\\src\\\\components\\\\Board.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport HistoryRow from \"./HistoryRow\";\nimport { useState, useEffect } from 'react';\nimport CurrentRow from \"./CurrentRow\";\nimport BlankRows from \"./BlankRows\";\nimport Opponent from \"./Opponent\";\nimport { letterKeys, fullKeyboard } from '../constants.js';\nimport { useGameStatus } from '../functions/handler.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Board(_ref) {\n  _s();\n\n  let {\n    gameID,\n    wordle,\n    client,\n    players,\n    user,\n    gameEnd,\n    reload,\n    clientID,\n    opponentData\n  } = _ref;\n  const {\n    gameStatusRef,\n    setGameStatus,\n    currentRowRef,\n    history,\n    historyRef,\n    error,\n    winner,\n    rematch,\n    setRematch,\n    updateKeys,\n    tie,\n    keyboard,\n    resetGame,\n    checkKey,\n    handleGameState\n  } = useGameStatus();\n  useEffect(() => {\n    if (gameEnd.status) {\n      setGameStatus(true);\n    } else {\n      setGameStatus(false);\n    }\n  }, [gameEnd]);\n  useEffect(() => {\n    resetGame();\n    console.log(\"init\");\n    window.addEventListener('keyup', middlewareKey);\n    return () => {\n      window.removeEventListener('keyup', middlewareKey);\n    };\n  }, [wordle]);\n  useEffect(() => {\n    updateKeys();\n  }, [history]);\n\n  const handleRematch = e => {\n    e.preventDefault();\n    const data = {\n      type: \"rematch\",\n      payload: {\n        gameID: gameID,\n        clientID: clientID\n      }\n    };\n    client.send(JSON.stringify(data));\n    setRematch(false);\n  };\n\n  const middlewareKey = e => {\n    checkKey(e, wordle, client, clientID, gameID, user);\n  };\n\n  const handleKeyChange = d => {\n    d.preventDefault();\n    if (historyRef.current.length == 6 || gameStatusRef.current) return;\n    const key = d.target.getAttribute(\"data\");\n    const keyCode = d.target.getAttribute(\"code\");\n    middlewareKey({\n      key: key,\n      keyCode: keyCode\n    });\n  };\n\n  useEffect(() => {\n    handleGameState(gameEnd, user);\n  }, [reload]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-container\",\n    children: [/*#__PURE__*/_jsxDEV(Opponent, {\n      opponentData: opponentData,\n      opponent: players.find(player => player !== user)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toasty\",\n        children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: error ? \"toast-container error\" : \"toast-container\",\n          children: \"Not a word!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 23\n        }, this), winner && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: winner ? \"toast-container error\" : \"toast-container\",\n          children: \"You won!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 24\n        }, this), winner == false && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: winner == false ? \"toast-container error\" : \"toast-container\",\n          children: \"You lost!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 33\n        }, this), tie && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: tie ? \"toast-container error\" : \"toast-container\",\n          children: \"Tie!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), rematch && /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: e => handleRematch(e),\n          className: rematch ? \"toast-container rematch\" : \"toast-container\",\n          children: \"Rematch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this), history.length > 0 && /*#__PURE__*/_jsxDEV(HistoryRow, {\n        history: historyRef.current,\n        opponent: \"false\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 32\n      }, this), history.length < 6 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"currentrow-container\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(CurrentRow, {\n          currentRow: currentRowRef.current\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 71\n        }, this), /*#__PURE__*/_jsxDEV(BlankRows, {\n          opponent: \"false\",\n          blankRows: 6 - historyRef.current.length - 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 32\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"fallback-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"keyboard-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"keyboard\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"keyrow one\",\n          children: letterKeys[0].map(target => {\n            const key = keyboard[target].key;\n            const status = keyboard[target].status;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              value: key,\n              className: `keytile ${status}`,\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: e => handleKeyChange(e),\n                data: key,\n                code: key.toUpperCase().charCodeAt(0),\n                className: `keyboardtile ${status}`,\n                children: key.toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 29\n              }, this)\n            }, `${key} ${status}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 25\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"keyrow two\",\n          children: letterKeys[1].map(target => {\n            const key = keyboard[target].key;\n            const status = keyboard[target].status;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              value: key,\n              className: `keytile ${status}`,\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: e => handleKeyChange(e),\n                data: key,\n                code: key.toUpperCase().charCodeAt(0),\n                className: `keyboardtile ${status}`,\n                children: key.toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 29\n              }, this)\n            }, `${key} ${status}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 25\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"keyrow three\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"keytile none special\",\n            value: \"ENTER\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => handleKeyChange(e),\n              data: 13,\n              code: 13,\n              className: `keyboardtile`,\n              children: \"ENTER\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this), letterKeys[2].map(target => {\n            const key = keyboard[target].key;\n            const status = keyboard[target].status;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              value: key,\n              className: `keytile ${status}`,\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: e => handleKeyChange(e),\n                data: key,\n                code: key.toUpperCase().charCodeAt(0),\n                className: `keyboardtile ${status}`,\n                children: key.toUpperCase()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 29\n              }, this)\n            }, `${key} ${status}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 25\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"div\", {\n            value: \"DELETE\",\n            className: \"keytile none special\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => handleKeyChange(e),\n              data: 8,\n              code: 8,\n              className: `keyboardtile`,\n              children: \"BACK\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Board, \"tz9CV2YQ/eRvcwkLXHxF3RVZJ1Y=\", false, function () {\n  return [useGameStatus];\n});\n\n_c = Board;\nexport default Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["C:/Users/ytdan/OneDrive/Desktop/Computer Science/MERN/wordle-io/client/src/components/Board.js"],"names":["React","HistoryRow","useState","useEffect","CurrentRow","BlankRows","Opponent","letterKeys","fullKeyboard","useGameStatus","Board","gameID","wordle","client","players","user","gameEnd","reload","clientID","opponentData","gameStatusRef","setGameStatus","currentRowRef","history","historyRef","error","winner","rematch","setRematch","updateKeys","tie","keyboard","resetGame","checkKey","handleGameState","status","console","log","window","addEventListener","middlewareKey","removeEventListener","handleRematch","e","preventDefault","data","type","payload","send","JSON","stringify","handleKeyChange","d","current","length","key","target","getAttribute","keyCode","find","player","map","toUpperCase","charCodeAt"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport HistoryRow from \"./HistoryRow\";\r\nimport {useState, useEffect} from 'react'\r\nimport CurrentRow from \"./CurrentRow\";\r\nimport BlankRows from \"./BlankRows\";\r\nimport Opponent from \"./Opponent\";\r\nimport {letterKeys, fullKeyboard} from '../constants.js';\r\nimport {useGameStatus} from '../functions/handler.js'\r\n\r\nfunction Board({gameID, wordle, client, players, user, gameEnd, reload, clientID, opponentData}) {\r\n   \r\n   const {gameStatusRef, setGameStatus, currentRowRef,  history, historyRef, error, winner, rematch, setRematch, updateKeys, tie ,keyboard, resetGame, checkKey, handleGameState} = useGameStatus()\r\n   \r\n    useEffect(() => {\r\n        if (gameEnd.status) {\r\n            setGameStatus(true);\r\n        } else {\r\n            setGameStatus(false);\r\n        }\r\n    }, [gameEnd])\r\n\r\n    useEffect(() => {\r\n        resetGame()\r\n        console.log(\"init\")\r\n        window.addEventListener('keyup', middlewareKey);\r\n        \r\n        return () => {\r\n            window.removeEventListener('keyup', middlewareKey)\r\n        }\r\n    }, [wordle])\r\n\r\n   useEffect(() => {\r\n        updateKeys()\r\n    }, [history])\r\n   \r\n   const handleRematch = e => {\r\n       e.preventDefault();\r\n       const data = {\r\n           type: \"rematch\",\r\n           payload: {\r\n                gameID: gameID,\r\n                clientID: clientID,\r\n           }\r\n       }\r\n       client.send(JSON.stringify(data));\r\n       setRematch(false);\r\n    }\r\n   \r\n   const middlewareKey = (e) => {\r\n        checkKey(e, wordle, client, clientID, gameID, user)\r\n    }\r\n\r\n    const handleKeyChange = (d) => {\r\n        d.preventDefault();\r\n        if (historyRef.current.length == 6 || gameStatusRef.current) return;\r\n        const key = d.target.getAttribute(\"data\")\r\n        const keyCode = d.target.getAttribute(\"code\")\r\n        middlewareKey({key: key, keyCode: keyCode});\r\n    }\r\n    \r\n    useEffect(()=>{\r\n        handleGameState(gameEnd, user)\r\n    }, [reload])\r\n\r\n  return (\r\n  <div className=\"board-container\">\r\n    <Opponent opponentData={opponentData} opponent={players.find((player) => player !== user)}></Opponent>\r\n    <div className=\"user-container\">\r\n        <div className=\"toasty\">\r\n            {error && <div className={error ? \"toast-container error\" : \"toast-container\"}>Not a word!</div>}\r\n            {winner && <div className={winner ? \"toast-container error\" : \"toast-container\"}>You won!</div>}\r\n            {winner == false && <div className={winner == false ? \"toast-container error\" : \"toast-container\"}>You lost!</div>}\r\n            {tie && <div className={tie ? \"toast-container error\" : \"toast-container\"}>Tie!</div>}\r\n            {rematch &&<div onClick={(e) => handleRematch(e)}className={rematch ? \"toast-container rematch\" : \"toast-container\"}>Rematch</div>}\r\n        </div>\r\n      <p>{user}</p>\r\n        {history.length > 0 && <HistoryRow history={historyRef.current} opponent={\"false\"}></HistoryRow>}\r\n        {history.length < 6 && <div className=\"currentrow-container\"> <CurrentRow currentRow={currentRowRef.current}></CurrentRow>\r\n        <BlankRows opponent={\"false\"} blankRows={6 - historyRef.current.length - 1}></BlankRows></div>}\r\n      <input className=\"fallback-input\" ></input>\r\n    </div> \r\n    <div className=\"keyboard-container\">\r\n        <div className=\"keyboard\">\r\n            <div className=\"keyrow one\">\r\n                {letterKeys[0].map((target) => {\r\n                    const key = keyboard[target].key;\r\n                    const status = keyboard[target].status\r\n                    return (\r\n                        <div  value={key} key={`${key} ${status}`} className={`keytile ${status}`}>\r\n                            <button onClick={(e) => handleKeyChange(e)} data={key} code={key.toUpperCase().charCodeAt(0)} className={`keyboardtile ${status}`}>{key.toUpperCase()}</button>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n            <div className=\"keyrow two\">\r\n                {letterKeys[1].map((target) => {\r\n                    const key = keyboard[target].key;\r\n                    const status = keyboard[target].status\r\n                    return (\r\n                        <div  value={key} key={`${key} ${status}`} className={`keytile ${status}`}>\r\n                            <button onClick={(e) => handleKeyChange(e)} data={key} code={key.toUpperCase().charCodeAt(0)} className={`keyboardtile ${status}`}>{key.toUpperCase()}</button>\r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n            <div className=\"keyrow three\">\r\n                <div className=\"keytile none special\"  value={\"ENTER\"}>\r\n                            <button onClick={(e) => handleKeyChange(e)} data={13} code={13} className={`keyboardtile`}>ENTER</button>\r\n                        </div>\r\n                {letterKeys[2].map((target) => {\r\n                    const key = keyboard[target].key;\r\n                    const status = keyboard[target].status\r\n                    return (\r\n                        <div value={key} key={`${key} ${status}`} className={`keytile ${status}`}>\r\n                            <button  onClick={(e) => handleKeyChange(e)} data={key} code={key.toUpperCase().charCodeAt(0)} className={`keyboardtile ${status}`}>{key.toUpperCase()}</button>\r\n                        </div>\r\n                    )\r\n                })}\r\n                <div value={\"DELETE\"} className=\"keytile none special\">\r\n                    <button onClick={(e) => handleKeyChange(e)} data={8} code={8} className={`keyboardtile`}>BACK</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  </div>)\r\n}\r\n\r\nexport default Board;\r\n"]},"metadata":{},"sourceType":"module"}